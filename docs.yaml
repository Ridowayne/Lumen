openapi: 3.0.2
info:
  title: Lumen Express Backend Server
  description: This is a REST API aplication made with express. It persists and retrives data.
  contact: {}
  version: '1.0'
servers:
  - url: https://lumenapi.onrender.com/api/v1
  - url: https://localhost:5050/api/v1

paths:
  /donation/donate:
    post:
      tags:
        - Donation
      summary: Create a new donation
      description: This route is used to create a donation by the user
      requestBody:
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/donation'
              - example:
                  charityOrganisation: BFREE Foundation
                  amount: 12000
                  emailAddress: udeme@example.com
                  uniqueCode: isa7y83d9yqwyd
                  receiptOfPayment: image.jpg
          example:
            charityOrganisation: BFREE Foundation
            amount: 12000
            emailAddress: udeme@example.com
            uniqueCode: isa7y83d9yqwyd
            receiptOfPayment: image.jpg
      required: true
      responses:
        '201':
          description: Created successfully
          content:
            application/json:
              schema: {}
        '400':
          description: Bad Client request
          content:
            application/json:
              schema: {}
        '401':
          description: Authentication failed
          content:
            application/json:
              schema: {}
        '500':
          description: Server error
          content:
            application/json:
              schema: {}

  /donation/allDonations:
    get:
      summary: Fetch all donations
      description: This route is used to fetch all donations submitted by the users
      tags:
        - Donation
      responses:
        '200':
          description: fetched successfully
          content:
            application/json:
              schema: {}
        '400':
          description: Bad Client request
          content:
            application/json:
              schema: {}
        '401':
          description: Authentication failed
          content:
            application/json:
              schema: {}
        '500':
          description: Server error
          content:
            application/json:
              schema: {}

  /donation/:id:
    get:
      summary: Get one donation
      description: This route is used to fetch one donation based on the id
      tags:
        - Donation
      parameters: []
      responses:
        '200':
          description: fetched successfully
          content:
            application/json:
              schema: {}
        '400':
          description: Bad Client request
          content:
            application/json:
              schema: {}
        '401':
          description: Authentication failed
          content:
            application/json:
              schema: {}
        '500':
          description: Server error
          content:
            application/json:
              schema: {}

  /feedback/newFeedBack:
    post:
      summary: Create a new feedback
      description: This route is used to create a new feedback by the user
      tags:
        - Feedback
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/feedbackSample'
              - example:
                  navigationRatings: 4
                  usefullnessRatings: 4
                  bestFeature: card payment option
                  worstFeature: feedback
                  advise: it is a good idea to help us pray
          example:
            navigationRatings: 4
            usefullnessRatings: 4
            bestFeature: card payment option
            worstFeature: feedback
            advise: it is a good idea to help us pray
      required: true
      responses:
        '201':
          description: created successfully
          content:
            application/json:
              schema: {}
        '400':
          description: Bad Client request
          content:
            application/json:
              schema: {}
        '401':
          description: Authentication failed
          content:
            application/json:
              schema: {}
        '500':
          description: Server error
          content:
            application/json:
              schema: {}

  /feedback/allFeedBacks:
    get:
      summary: Get all feedback
      description: This route is used to get all feedbacks submitted
      tags:
        - Feedback
      responses:
        '200':
          description: fetched successfully
          content:
            application/json:
              schema: {}
        '400':
          description: Bad Client request
          content:
            application/json:
              schema: {}
        '401':
          description: Authentication failed
          content:
            application/json:
              schema: {}
        '500':
          description: Server error
          content:
            application/json:
              schema: {}

  /feedback/:id:
    get:
      summary: Get one feedback
      description: This route is used to get one feedback based on the id
      tags:
        - Feedback
      parameters: []
      responses:
        '200':
          description: fetched successfully
          content:
            application/json:
              schema: {}
        '400':
          description: Bad Client request
          content:
            application/json:
              schema: {}
        '401':
          description: Authentication failed
          content:
            application/json:
              schema: {}
        '500':
          description: Server error
          content:
            application/json:
              schema: {}

  /feedback/feedbackType:
    get:
      summary:
      description:
      tags:
        - Feedback
      responses:
        '200':
          description: fetched successfully
          content:
            application/json:
              schema: {}
        '400':
          description: Bad Client request
          content:
            application/json:
              schema: {}
        '401':
          description: Authentication failed
          content:
            application/json:
              schema: {}
        '500':
          description: Server error
          content:
            application/json:
              schema: {}

  /parish/createParish:
    post:
      summary: Create a new parish
      description: This route is used to create a new parish by the administrator
      tags:
        - Parish
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/parishSample'
              - example:
                  name: Udeme Lumen church
                  description: Mosck parish cretaed
                  image: pathtoimage
                  address: 12 Udeme street Lagos, Nigeria.
                  website: www.UdemeLumen.com
                  email:
                  phone: 2349074452956
                  location: 160
                  parishOfficeHours: 8am - 5pm
                  daysOfMass: Sunday
                  confessionDays: Mondays & Saturday
          example:
            name: Udeme Lumen church
            description: Mosck parish cretaed
            image: pathtoimage
            address: 12 Udeme street Lagos, Nigeria.
            website: www.UdemeLumen.com
            email:
            phone: 2349074452956
            location: 160
            parishOfficeHours: 8am - 5pm
            daysOfMass: Sunday
            confessionDays: Mondays & Saturday
      responses:
        '201':
          description: Created successfully
          content:
            application/json:
              schema: {}
        '400':
          description: Bad Client request
          content:
            application/json:
              schema: {}
        '401':
          description: Authentication failed
          content:
            application/json:
              schema: {}
        '500':
          description: Server error
          content:
            application/json:
              schema: {}

  /parish/allParish:
    get:
      summary: Get all parish
      description: This route is used to get all the parish available
      tags:
        - Parish
      responses:
        '200':
          description: fetched successfully
          content:
            application/json:
              schema: {}
        '400':
          description: Bad Client request
          content:
            application/json:
              schema: {}
        '401':
          description: Authentication failed
          content:
            application/json:
              schema: {}
        '500':
          description: Server error
          content:
            application/json:
              schema: {}

  /parish/:id:
    get:
      summary: Get one parish
      description: This route is used to get one Parish based on the id
      tags:
        - Parish
      parameters: []
      responses:
        '200':
          description: fetched successfully
          content:
            application/json:
              schema: {}
        '400':
          description: Bad Client request
          content:
            application/json:
              schema: {}
        '401':
          description: Authentication failed
          content:
            application/json:
              schema: {}
        '500':
          description: Server error
          content:
            application/json:
              schema: {}

  /parish/updateParish:
    patch:
      summary: Update a parish
      description: This route is used to update a parish information
      tags:
        - Parish
      responses:
        '201':
          description: upadted successfully
          content:
            application/json:
              schema: {}
        '400':
          description: Bad Client request
          content:
            application/json:
              schema: {}
        '401':
          description: Authentication failed
          content:
            application/json:
              schema: {}
        '500':
          description: Server error
          content:
            application/json:
              schema: {}

  /user/login:
    post:
      summary: Login to the app
      description: This route is used to login for the admin
      tags:
        - User
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/loginSample'
              - example:
                  email: Udeme@example.com
                  password: Udeme@1235
          example:
            email: Udeme@example.com
            password: Udeme@1235
      responses:
        '200':
          description: login successfully
          content:
            application/json:
              schema: {}
        '400':
          description: Bad Client request
          content:
            application/json:
              schema: {}
        '401':
          description: Authentication failed
          content:
            application/json:
              schema: {}
        '500':
          description: Server error
          content:
            application/json:
              schema: {}

  /testimony/createTestimony:
    post:
      summary: Create a new Testimony
      description: This route is used to create a new testimony by the user
      tags:
        - Testimony
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/testimonySample'
              - example:
                  name: Udeme
                  testimony1: Udeme@1235
                  testimony2: Thank God
          example:
            name: Udeme
            testimony1: Thank God
            testimony2: Thank God
      responses:
        '200':
          description: fetched successfully
          content:
            application/json:
              schema: {}
        '400':
          description: Bad Client request
          content:
            application/json:
              schema: {}
        '401':
          description: Authentication failed
          content:
            application/json:
              schema: {}
        '500':
          description: Server error
          content:
            application/json:
              schema: {}

  /testimony/getTestimony:
    get:
      summary: Fetch all testimonies
      description: This route is used to retrieve all testimonies available
      tags:
        - Testimony
      responses:
        '200':
          description: fetched successfully
          content:
            application/json:
              schema: {}
        '400':
          description: Bad Client request
          content:
            application/json:
              schema: {}
        '401':
          description: Authentication failed
          content:
            application/json:
              schema: {}
        '500':
          description: Server error
          content:
            application/json:
              schema: {}

  /testimony/:id:
    get:
      summary: Gets one testimony
      description: This route will be used to fetch one particular testimony based on the specified id
      tags:
        - Testimony
      parameters: []
      responses:
        '200':
          description: fetched successfully
          content:
            application/json:
              schema: {}
        '400':
          description: Bad Client request
          content:
            application/json:
              schema: {}
        '401':
          description: Authentication failed
          content:
            application/json:
              schema: {}
        '500':
          description: Server error
          content:
            application/json:
              schema: {}

  /intention/create:
    post:
      summary: Creates a new intention
      description: This route is used to create a new intention
      tags:
        - Intention
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/intentionSample'
              - example:
                  name: Udeme
                  prayerRequest: God help me
                  daysFrom: December 12 2023
                  daysTo: December 31 2023
                  uniqueCode: j7adu9q677qt8
                  parish: Udeme Lumen Parish
                  prayerTime: 12am
                  receiptOfPayment: pathtoImage
          example:
            name: Udeme
            prayerRequest: God help me
            daysFrom: December 12 2023
            daysTo: December 31 2023
            uniqueCode: j7adu9q677qt8
            parish: Udeme Lumen Parish
            prayerTime: 12am
            receiptOfPayment: pathtoImage
      responses:
        '201':
          description: Created successfully
          content:
            application/json:
              schema: {}
        '400':
          description: Bad Client request
          content:
            application/json:
              schema: {}
        '401':
          description: Authentication failed
          content:
            application/json:
              schema: {}
        '500':
          description: Server error
          content:
            application/json:
              schema: {}

  /intention/allIntentions:
    get:
      summary: Fetches all Intentions
      description: This Route will be used to fetch all Intentions available
      tags:
        - Intention
      responses:
        '200':
          description: fetched successfully
          content:
            application/json:
              schema: {}
        '400':
          description: Bad Client request
          content:
            application/json:
              schema: {}
        '401':
          description: Authentication failed
          content:
            application/json:
              schema: {}
        '500':
          description: Server error
          content:
            application/json:
              schema: {}

  /intention/:id:
    get:
      summary: Get one intention
      description: This route will fect the specified intention based on the id parameter
      tags:
        - Intention
      responses:
        '200':
          description: fetched successfully
          content:
            application/json:
              schema: {}
        '400':
          description: Bad Client request
          content:
            application/json:
              schema: {}
        '401':
          description: Authentication failed
          content:
            application/json:
              schema: {}
        '500':
          description: Server error
          content:
            application/json:
              schema: {}

  /intention/:parishId:
    get:
      summary: fetches intentions based on the parish ID
      description: This route will fecth all intentions for the parish Id on the parameter
      tags:
        - Intention
      responses:
        '200':
          description: fetched successfully
          content:
            application/json:
              schema: {}
        '400':
          description: Bad Client request
          content:
            application/json:
              schema: {}
        '401':
          description: Authentication failed
          content:
            application/json:
              schema: {}
        '500':
          description: Server error
          content:
            application/json:
              schema: {}
components:
  parameters:
    id:
      name: id
      in: path
      schema:
        type: string
        example: 'e67c09e4-0b99-40b3-ad85-e750c98b8658'
      required: true
      style: simple
      description: The mongodb _id to fetch

  schemas:
    intentionSample:
      title: intentionSample
      required:
        - name
        - prayerRequest
        - daysFrom
        - daysTo
        - uniqueCode
        - parish
        - prayerTime
        - paymentReceipt
      type: object
      properties:
        name:
          type: string
        prayerRequest:
          type: date
        daysFrom:
          type: date
        uniqueCode:
          type: string
        parish:
          type: string
        prayerTime:
          type: string
        paymentReceipt:
          type: string
    testimonySample:
      title: testimonySample
      required:
        - name
        - testimony1
        - testimony2
      type: object
      properties:
        name:
          type: string
        testimony1:
          type: string
        testimony2:
          type: string
    loginSample:
      title: loginSample
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    parishSample:
      title: parishSample
      required:
        - name
        - description
        - image
        - address
        - website
        - email
        - phone
        - location
        - parishOfficeHours
        - daysOfMass
        - confessionDays
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        image:
          type: string
        address:
          type: string
          address:
            type: string
    donation:
      title: donation
      required:
        - charityOrganisation
        - amount
        - uniqueCode
        - paymentReceipt
        - emailAddress
      type: object
      properties:
        charityOrganisation:
          type: string
        amount:
          type: number
        uniqueCode:
          type: string
        paymentReceipt:
          type: string
        emailAddress:
          type: string

tags:
  - name: Feedback
  - name: Testimony
  - name: Parish
  - name: User
  - name: Intention
  - name: Donation
